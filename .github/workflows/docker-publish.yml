name: Docker Publish

on:
  schedule:
    - cron: '00 1 * * *'  # 每天北京时间上午9点执行
  workflow_dispatch:

env:
  REGISTRY: docker.io
  IMAGE_NAME: woshi17/docker-drpy-node

jobs:
  workflow-keepalive:
    if: github.event_name == 'schedule'
    runs-on: ubuntu-latest
    permissions:
      actions: write
    steps:
      - uses: liskin/gh-workflow-keepalive@v1

  build-matrix:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - platform: linux/amd64
            tag: latest-amd64
          - platform: linux/arm64
            tag: latest-arm64
          - platform: linux/arm/v7
            tag: latest-armv7
    permissions:
      contents: read
      packages: write
      id-token: write
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Show build context content (debug)
        run: ls -la && cat package.json

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log into Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKER_HUB_USER }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: type=raw,value=${{ matrix.tag }}

      - name: Build and push image for ${{ matrix.platform }}
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          platforms: ${{ matrix.platform }}
          push: true
          provenance: false
          sbom: false
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  combine-images:
    runs-on: ubuntu-latest
    needs: build-matrix
    permissions:
      contents: read
      packages: write
      id-token: write
    steps:
      - name: Log into Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKER_HUB_USER }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Create and push manifest list
        uses: Noelware/docker-manifest-action@0.4.3
        with:
          inputs: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          images: >-
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest-amd64,
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest-arm64,
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest-armv7
          push: true
